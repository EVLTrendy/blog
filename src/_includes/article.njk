---
layout: 'base.njk'
---
<section class="articlesection">
  <div class="imagediv">
    {% if imageParentIsParagraph %}
      <img src="{{ image }}" alt="{{ imageAlt }}">
    {% else %}
      <img src="{{ image }}" alt="{{ imageAlt }}">
    {% endif %}
  </div>
  <h3 class="article_title">{{ title }}</h3>
  <p class="article_meta">By&nbsp;<span>{{ author }}</span>&nbsp;on&nbsp;<span>{{date | postDate}}</span></p>
  <div class="article_body">
    <div class="article_bodydiv">
      <section class="adcontainers">
        {% include 'personalads.njk' %}
      </section>
      {{ content | safe | replace('<h3', '<hr><h3') | replace('<img', '<img class="blogpic"') }}
    </div>

    <!-- Share Button Section -->
    <div class="share-section" style="margin-top: 2rem; text-align: center;">
      <div class="short-url-container" style="margin-bottom: 1rem;">
        <input type="text" id="shortUrl" readonly style="width: 100%; max-width: 400px; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px; margin-right: 0.5rem;">
        <button onclick="copyShortUrl()" class="copy-button" style="padding: 0.5rem 1rem; background-color: #0070f3; color: white; border: none; border-radius: 4px; cursor: pointer;">
          Copy
        </button>
      </div>
      <div id="error-message" style="color: red; margin-bottom: 1rem; display: none;"></div>
      <div id="debug-info" style="color: #666; font-size: 0.8rem; margin-bottom: 1rem; display: none;"></div>
      <button onclick="generateShortUrl()" class="share-button" style="padding: 0.75rem 1.5rem; font-size: 1rem; background-color: #0070f3; color: white; border: none; border-radius: 5px; cursor: pointer;">
        Generate Short URL
      </button>
    </div>
    <!-- End Share Button Section -->

  </div>
</section>

<script>
async function generateShortUrl() {
  const button = document.querySelector('.share-button');
  const errorMessage = document.getElementById('error-message');
  const debugInfo = document.getElementById('debug-info');
  const shortUrlInput = document.getElementById('shortUrl');
  
  button.disabled = true;
  button.textContent = 'Generating...';
  errorMessage.style.display = 'none';
  debugInfo.style.display = 'none';
  shortUrlInput.value = '';
  
  try {
    // Get the current URL and ensure it's the canonical URL
    const currentUrl = window.location.href;
    debugInfo.textContent = `Current URL: ${currentUrl}`;
    debugInfo.style.display = 'block';
    
    console.log('Sending request to shorten URL:', currentUrl);
    
    const response = await fetch('/.netlify/functions/shorten', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        long_url: currentUrl
      })
    });
    
    debugInfo.textContent += `\nResponse status: ${response.status}`;
    
    let data;
    try {
      data = await response.json();
      debugInfo.textContent += `\nResponse data: ${JSON.stringify(data)}`;
    } catch (e) {
      console.error('Error parsing response:', e);
      debugInfo.textContent += `\nError parsing response: ${e.message}`;
      throw new Error('Invalid response from server');
    }
    
    if (!response.ok) {
      throw new Error(data.error || `Server error: ${response.status}`);
    }
    
    if (data.shortUrl) {
      shortUrlInput.value = data.shortUrl;
      button.textContent = 'Generate Short URL';
    } else {
      throw new Error('No short URL received from server');
    }
  } catch (error) {
    console.error('Error:', error);
    errorMessage.textContent = `Error: ${error.message}`;
    errorMessage.style.display = 'block';
    button.textContent = 'Error - Try Again';
  } finally {
    button.disabled = false;
  }
}

function copyShortUrl() {
  const shortUrlInput = document.getElementById('shortUrl');
  if (!shortUrlInput.value) {
    return;
  }
  
  shortUrlInput.select();
  document.execCommand('copy');
  
  const copyButton = document.querySelector('.copy-button');
  const originalText = copyButton.textContent;
  copyButton.textContent = 'Copied!';
  setTimeout(() => {
    copyButton.textContent = originalText;
  }, 2000);
}
</script>
