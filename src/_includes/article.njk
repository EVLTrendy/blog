---
layout: 'base.njk'
---
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "Article",
  "headline": "{{ title }}",
  "author": {
    "@type": "Person",
    "name": "{{ author }}"
  },
  "datePublished": "{{ date }}",
  "image": "{{ image | absoluteUrl }}",
  "publisher": {
    "@type": "Organization",
    "name": "EvolvedLotus",
    "logo": {
      "@type": "ImageObject",
      "url": "https://blog.evolvedlotus.com/assets/logo.png"
    }
  },
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "{{ page.url | absoluteUrl }}"
  }
}
</script>

<!-- Primary Meta Tags -->
<meta name="title" content="{{ title }}">
<meta name="description" content="{{ description }}">

<!-- Open Graph / Facebook -->
<meta property="og:type" content="article">
<meta property="og:url" content="{{ page.url | absoluteUrl }}">
<meta property="og:title" content="{{ title }}">
<meta property="og:description" content="{{ description }}">
<meta property="og:image" content="{{ image | absoluteUrl }}">
<meta property="og:site_name" content="EvolvedLotus Blog">
<meta property="article:published_time" content="{{ date }}">
<meta property="article:author" content="{{ author }}">
<meta property="article:section" content="Blog">

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@evolvedlotus">
<meta name="twitter:url" content="{{ page.url | absoluteUrl }}">
<meta name="twitter:title" content="{{ title }}">
<meta name="twitter:description" content="{{ description }}">
<meta name="twitter:image" content="{{ image | absoluteUrl }}">

<!-- Discord -->
<meta property="discord:embed" content="true">
<meta property="discord:embed:title" content="{{ title }}">
<meta property="discord:embed:description" content="{{ description }}">
<meta property="discord:embed:image" content="{{ image | absoluteUrl }}">
<meta property="discord:embed:url" content="{{ page.url | absoluteUrl }}">

<section class="articlesection">
  <div class="imagediv">
    {% if imageParentIsParagraph %}
      <img src="{{ image }}" alt="{{ imageAlt | default(title) }}" width="800" height="400">
    {% else %}
      <img src="{{ image }}" alt="{{ imageAlt | default(title) }}" width="800" height="400">
    {% endif %}
  </div>
  <h1 class="article_title">Complete Guide: {{ title }}</h1>
  <h2>Overview</h2>
  <p class="article_meta">
    By&nbsp;<span>{{ author }}</span>&nbsp;on&nbsp;<span>{{date | postDate}}</span>
    <div class="share-icons">
      <button data-action="twitter" title="Share on Twitter" class="share-button" type="button">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
          <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
        </svg>
      </button>
      <button data-action="facebook" title="Share on Facebook" class="share-button" type="button">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
          <path d="M9.198 21.5h4v-8.01h3.604l.396-3.98h-4V7.5a1 1 0 0 1 1-1h3v-4h-3a5 5 0 0 0-5 5v2.01h-2l-.396 3.98h2.396v8.01Z"/>
        </svg>
      </button>
      <button data-action="whatsapp" title="Share on WhatsApp" class="share-button" type="button">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
          <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413Z"/>
        </svg>
      </button>
      <button data-action="copy" title="Copy link" class="share-button" type="button">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
          <path d="M13.723 18.654l-3.61 3.609c-2.316 2.315-6.063 2.315-8.378 0-2.315-2.316-2.315-6.062 0-8.377L4.868 9.85a.75.75 0 1 1 1.06 1.06l-3.133 3.136c-1.732 1.732-1.732 4.53 0 6.262 1.732 1.731 4.53 1.731 6.262 0l3.61-3.61a.75.75 0 0 1 1.06 1.06l-.004-.003ZM19.132 14.15l-3.133 3.134a.75.75 0 0 1-1.06-1.06l3.133-3.136c1.732-1.732 1.732-4.53 0-6.262-1.732-1.731-4.53-1.731-6.262 0l-3.61 3.61a.75.75 0 0 1-1.06-1.06l3.61-3.61c2.315-2.315 6.062-2.315 8.377 0 2.315 2.316 2.315 6.062 0 8.377l.005.007Z"/>
        </svg>
      </button>
    </div>
  </p>
  <div class="article_body">
    <div class="article_bodydiv">

      {{ content | safe | replace('<h3', '<hr><h3') | replace('<img', '<img class="blogpic" width="800" height="400"') | replace('<table', '<table><caption>Video Recording Software Comparison</caption>') | insertAdAfterParagraphs(2) | insertAdAfterParagraphs(5) }}
    </div>
  </div>
</section>

<div id="toast"></div>

<script>
async function generateShortUrl() {
  try {
    const response = await fetch('/.netlify/functions/shorten', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        long_url: window.location.href
      })
    });
    
    console.log('Response status:', response.status);
    const data = await response.json();
    console.log('Response data:', data);
    
    if (!response.ok) {
      throw new Error(data.error || 'Failed to generate short URL');
    }
    
    if (!data.id) {
      throw new Error('No short URL ID returned from server');
    }
    
    return `https://blog.evolvedlotus.com/r/${data.id}`;
  } catch (error) {
    console.error('Error generating short URL:', error);
    throw error;
  }
}

function showToast(message) {
  const toast = document.getElementById('toast');
  toast.textContent = message;
  toast.style.display = 'block';
  setTimeout(() => {
    toast.style.display = 'none';
  }, 3000);
}

async function shareOnTwitter() {
  try {
    const shortUrl = await generateShortUrl();
    const text = encodeURIComponent(`${document.title}\n${shortUrl}`);
    window.open(`https://twitter.com/intent/tweet?text=${text}`, '_blank');
  } catch (error) {
    console.error('Error sharing on Twitter:', error);
    showToast('Error: ' + error.message);
  }
}

async function shareOnFacebook() {
  try {
    const shortUrl = await generateShortUrl();
    window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shortUrl)}`, '_blank');
  } catch (error) {
    console.error('Error sharing on Facebook:', error);
    showToast('Error: ' + error.message);
  }
}

async function shareOnWhatsApp() {
  try {
    const shortUrl = await generateShortUrl();
    const text = encodeURIComponent(`${document.title}\n${shortUrl}`);
    window.open(`https://wa.me/?text=${text}`, '_blank');
  } catch (error) {
    console.error('Error sharing on WhatsApp:', error);
    showToast('Error: ' + error.message);
  }
}

async function copyToClipboard() {
  try {
    const shortUrl = await generateShortUrl();
    await navigator.clipboard.writeText(shortUrl);
    showToast('Short URL copied to clipboard!');
  } catch (error) {
    console.error('Error copying short URL:', error);
    showToast('Error: ' + error.message);
  }
}

// Safe event handling for share buttons
document.addEventListener('DOMContentLoaded', function() {
  const shareButtons = document.querySelectorAll('.share-button');

  shareButtons.forEach(button => {
    button.addEventListener('click', async function() {
      const action = this.getAttribute('data-action');

      try {
        switch(action) {
          case 'twitter':
            await shareOnTwitter();
            break;
          case 'facebook':
            await shareOnFacebook();
            break;
          case 'whatsapp':
            await shareOnWhatsApp();
            break;
          case 'copy':
            await copyToClipboard();
            break;
          default:
            console.warn('Unknown share action:', action);
        }
      } catch (error) {
        console.error('Share action failed:', error);
        showToast('Share action failed');
      }
    });
  });
});
</script>
